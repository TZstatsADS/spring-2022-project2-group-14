)
#显示
fig
library(plotly)
library(xlsx)
library(DT)
Hate_Crimes$hover <- with(Hate_Crimes, paste(County, '<br>'))
fig <- plot_geo(Hate_Crimes, locationmode = 'USA-states) #将表格数据与美国地图关联
#交互
fig <- fig %>% add_trace(
locations = ~code,
type='choropleth',
library(plotly)
library(xlsx)
library(DT)
Hate_Crimes$hover <- with(Hate_Crimes, paste(County, '<br>'))
fig <- plot_geo(Hate_Crimes, locationmode = 'USA-states') #将表格数据与美国地图关联
#交互
fig <- fig %>% add_trace(
locations = ~code,
type='choropleth',
z= ~definte,
text = ~hover,
colorscale="Reds"
)
#添加标题
fig <- fig %>% layout(
title = '美国疫情状况'
)
#显示
fig
library(plotly)
library(xlsx)
library(DT)
Hate_Crimes$hover <- with(Hate_Crimes, paste(County, '<br>'))
fig <- plot_geo(Hate_Crimes, locationmode = 'USA-states', code='NY) #将表格数据与美国地图关联
#交互
fig <- fig %>% add_trace(
locations = ~code,
type='choropleth',
library(plotly)
library(xlsx)
library(DT)
Hate_Crimes$hover <- with(Hate_Crimes, paste(County, '<br>'))
fig <- plot_geo(Hate_Crimes, locationmode = 'USA-states', code='NY') #将表格数据与美国地图关联
#交互
fig <- fig %>% add_trace(
locations = ~code,
type='choropleth',
z= ~definte,
text = ~hover,
colorscale="Reds"
)
#添加标题
fig <- fig %>% layout(
title = '美国疫情状况'
)
#显示
fig
library(plotly)
library(xlsx)
library(DT)
Hate_Crimes$hover <- with(Hate_Crimes, paste(County, '<br>'))
fig <- plot_geo(Hate_Crimes, locationmode = 'USA-states', code='New York') #将表格数据与美国地图关联
#交互
fig <- fig %>% add_trace(
locations = ~code,
type='choropleth',
z= ~definte,
text = ~hover,
colorscale="Reds"
)
#添加标题
fig <- fig %>% layout(
title = '美国疫情状况'
)
#显示
fig
ggplot() + geom_polygon(data = us.states,
aes(x=long,y=lat,group=group),
color = "grey", fill = NA)
us.states <- ggplot2::map_data("state")
ggplot() + geom_polygon(data = us.states,
aes(x=long,y=lat,group=group),
color = "grey", fill = NA)
map('county', 'iowa', fill = TRUE, col = palette())
map('county', 'iowa', fill = TRUE, col = palette())
library(maps)
map('county', 'iowa', fill = TRUE, col = palette())
map('county', 'new york', fill = TRUE, col = palette())
map('county', 'new york')
map('county', 'new york city')
install.packages('nycmaps')
install.packages("devtools")
devtools::install_github("zachcp/nycmaps")
libary(nycmaps)
library(nycmaps)
library(maps)
map(database="nyc")
library(tigris)
install.packages("tigris")
library(tigris)
library(dplyr)
library(leaflet)
install.packages("leaflet")
library(tigris)
library(dplyr)
library(leaflet)
library(sp)
library(ggmap)
library(maptools)
library(broom)
library(httr)
library(rgdal)
library(tigris)
library(dplyr)
library(leaflet)
library(sp)
library(ggmap)
library(maptools)
library(broom)
library(httr)
library(rgdal)
nyc_map <- get_map(location = c(lon = -74.00, lat = 40.71), maptype = "terrain", zoom = 11)
register_google(key = "AIzaSyCVWbGYizBSs2nZktIsO-GvOM3eaWSaizg", write= TRUE)
nyc_map <- get_map(location = c(lon = -74.00, lat = 40.71), maptype = "terrain", zoom = 11)
map_Manhattan_st <- get_map("Manhattan",
zoom = 12,
source = "stamen",
maptype = "toner-background")
ggmap(map_Manhattan_st)
View(data1)
View(data1)
View(data1)
g <- ggmap(map_Manhattan_st) + theme_map()
g + geom_point(data=data1, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
View(data3)
View(data3)
View(data3)
data3 = na.omit(data3)
g + geom_point(data=data3, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
g <- ggmap(map_Manhattan_st) + theme_map()
g + geom_point(data=data3, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
View(data3)
map_Manhattan_st <- get_map("New York City",
zoom = 12,
source = "stamen",
maptype = "toner-background")
ggmap(map_Manhattan_st)
g <- ggmap(map_Manhattan_st) + theme_map()
g + geom_point(data=data3, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
ggmap(g)
View(data3.df)
g <- ggmap(map_Manhattan_st) + theme_map()
g + geom_point(data=data3.df, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
ggmap(g)
map_Manhattan_st <- get_map("New York",
zoom = 12,
source = "stamen",
maptype = "toner-background")
ggmap(map_Manhattan_st)
g <- ggmap(map_Manhattan_st) + theme_map()
g + geom_point(data=data3.df, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
ggmap(g)
g<-g + geom_point(data=data3.df, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
ggmap(g)
g <- ggmap(map_Manhattan_st) + theme_map()
g + geom_point(data=data3.df, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
View(data3.df)
g + stat_density2d(data = nypd, geom = "polygon",
aes(x = Longitude, y = Latitude, fill=..level..,alpha=..level..)) +
scale_fill_gradient(low = "yellow", high = "red") + theme_simplemap()
g + stat_density2d(data = data3.df, geom = "polygon",
aes(x = Longitude, y = Latitude, fill=..level..,alpha=..level..)) +
scale_fill_gradient(low = "yellow", high = "red") + theme_simplemap()
g + stat_density2d(data = data3.df, geom = "polygon",
aes(x = Longitude, y = Latitude, fill=..level..,alpha=..level..)) +
scale_fill_gradient(low = "yellow", high = "red") + theme_map()
g + stat_density2d(data = data1, geom = "polygon",
aes(x = Longitude, y = Latitude, fill=..level..,alpha=..level..)) +
scale_fill_gradient(low = "yellow", high = "red") + theme_map()
nypd <- data1
off <- nypd$offense_desc1
offsel <- NA
View(nypd)
View(nypd)
off <- nypd$OFNS_DESC
offsel <- NA
offsel <- ifelse(off=="GRAND LARCENY" |
off=="PETIT LARCENY" |
off=="THEFT-FRAUD" |
off=="THEFT OF SERVICES", "Theft", offsel)
offsel <- ifelse(off=="HARRASSMENT", "Harrassment", offsel)
offsel <- ifelse(off=="ASSAULT 3 & RELATED OFFENSES" |
off=="FELONY ASSAULT", "Assault", offsel)
offsel <- ifelse(off=="DANGEROUS DRUGS", "Drugs", offsel)
offsel <- ifelse(is.na(offsel), "Other Crime", offsel)
nypd$offsel1 <- offsel
g + facet_wrap(~ offsel1, ncol = 2)
g + facet_wrap(~ nypd$offsel1, ncol = 2)
g + facet_wrap(~offsel, ncol = 2)
View(nypd)
g + facet_wrap(~nypd$offsel1, ncol = 2)
g + facet_wrap( ~ offsel1, ncol = 2)
nypd <- na.omit(nypd)
g + facet_wrap( ~ offsel1, ncol = 2)
g + facet_wrap( ~ offsel1)
g <- ggmap(map_Manhattan_st) + theme_map()
g + facet_wrap( ~ offsel1)
map_Manhattan_st <- get_map("New York",
zoom = 12,
source = "stamen",
maptype = "toner-background")
ggmap(map_Manhattan_st)
g <- ggmap(map_Manhattan_st) + theme_map()
g + geom_point(data=data3.df, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
map_Manhattan_st <- get_map("New York",
zoom = 12,
source = "stamen",
maptype = "toner-background")
ggmap(map_Manhattan_st)
g <- ggmap(map_Manhattan_st) + theme_map()
g + stat_density2d(data = data1, geom = "polygon",
aes(x = Longitude, y = Latitude, fill=..level..,alpha=..level..)) +
scale_fill_gradient(low = "yellow", high = "red") + theme_map()
library(tigris)
library(dplyr)
library(leaflet)
library(sp)
library(ggmap)
library(maptools)
library(broom)
library(httr)
library(rgdal)
register_google(key = "AIzaSyCVWbGYizBSs2nZktIsO-GvOM3eaWSaizg", write= TRUE)
map_Manhattan_st <- get_map("New York",
zoom = 12,
source = "stamen",
maptype = "toner-background")
ggmap(map_Manhattan_st)
```{r}
register_google(key = "AIzaSyCVWbGYizBSs2nZktIsO-GvOM3eaWSaizg", write= TRUE)
map_Manhattan_st <- get_map("New York",
zoom = 12,
source = "stamen",
maptype = "toner-background")
ggmap(map_Manhattan_st)
View(data3.df)
data1 <- NYPD_Complaint_Data_Current_Year_To_Date_
colnames(data1)
data2 <- data1[,c(22,33,34)]
colnames(data2)
data3 <- na.omit(data2)
data3.df <- as.data.frame(data3)
data3.df$RPT_DT <- paste(substr(data3.df$RPT_DT , 1, 3),substr(data3.df$RPT_DT , 7, 10))
g <- ggmap(map_Manhattan_st) + theme_map()
g + geom_point(data=data3.df, aes(x=Longitude,y=Latitude),
size=0.3, alpha=0.3, color="red")
g + stat_density2d(data = data1, geom = "polygon",
aes(x = Longitude, y = Latitude, fill=..level..,alpha=..level..)) +
scale_fill_gradient(low = "yellow", high = "red") + theme_map()
g + stat_density2d(data = data3.df, geom = "polygon",
aes(x = Longitude, y = Latitude, fill=..level..,alpha=..level..)) +
scale_fill_gradient(low = "yellow", high = "red") + theme_map()
nypd <- data1
off <- nypd$OFNS_DESC
offsel <- NA
offsel <- ifelse(off=="GRAND LARCENY" |
off=="PETIT LARCENY" |
off=="THEFT-FRAUD" |
off=="THEFT OF SERVICES", "Theft", offsel)
offsel <- ifelse(off=="HARRASSMENT", "Harrassment", offsel)
offsel <- ifelse(off=="ASSAULT 3 & RELATED OFFENSES" |
off=="FELONY ASSAULT", "Assault", offsel)
offsel <- ifelse(off=="DANGEROUS DRUGS", "Drugs", offsel)
offsel <- ifelse(is.na(offsel), "Other Crime", offsel)
nypd$offsel1 <- offsel
nypd <- na.omit(nypd)
g + facet_wrap( ~ offsel1)
nypd <- data1
sort(table(nypd$OFNS_DESC))
off <- nypd$OFNS_DESC
offsel <- NA
offsel <- ifelse(off=="GRAND LARCENY" |
off=="PETIT LARCENY" |
off=="THEFT-FRAUD" |
off=="THEFT OF SERVICES", "Theft", offsel)
offsel <- ifelse(off=="HARRASSMENT", "Harrassment", offsel)
offsel <- ifelse(off=="ASSAULT 3 & RELATED OFFENSES" |
off=="FELONY ASSAULT", "Assault", offsel)
offsel <- ifelse(off=="DANGEROUS DRUGS", "Drugs", offsel)
offsel <- ifelse(is.na(offsel), "Other Crime", offsel)
nypd$offsel1 <- offsel
nypd <- na.omit(nypd)
g + facet_wrap( ~ offsel1)
nypd <- data1
sort(table(nypd$OFNS_DESC))
off <- nypd$OFNS_DESC
offsel <- NA
offsel <- ifelse(off=="GRAND LARCENY" |
off=="PETIT LARCENY" |
off=="THEFT-FRAUD" |
off=="THEFT OF SERVICES", "Theft", offsel)
offsel <- ifelse(off=="HARRASSMENT", "Harrassment", offsel)
offsel <- ifelse(off=="ASSAULT 3 & RELATED OFFENSES" |
off=="FELONY ASSAULT", "Assault", offsel)
offsel <- ifelse(off=="DANGEROUS DRUGS", "Drugs", offsel)
offsel <- ifelse(is.na(offsel), "Other Crime", offsel)
nypd$offsel1 <- offsel
#nypd <- na.omit(nypd)
g + facet_wrap( ~ offsel1)
#nypd <- na.omit(nypd)
g + facet_wrap( ~ offsel1, ncol =2)
nypd <- data1
nypd <- nypd %>% filter(
is.na(nypd$Latitude)==FALSE &
is.na(nypd$Longitude)==FALSE)
# Plot
leaflet(nypd) %>%
addTiles() %>% # add the background map
addCircles(lng = ~Longitude, lat = ~Latitude)
nypd <- data1[0:100] %>% filter(
is.na(nypd$Latitude)==FALSE &
is.na(nypd$Longitude)==FALSE)
# Plot
leaflet(nypd) %>%
addTiles() %>% # add the background map
addCircles(lng = ~Longitude, lat = ~Latitude)
data_hate <- Hate_Crimes
offsel <- NA
offsel <- ifelse(off=="Bronx", 40.844782, offsel)
data_hate$offsel1 <- offsel
offsel <- NA
offsel <- ifelse(off=="Bronx", 40.844782, offsel)
#offsel <- ifelse(off=="HARRASSMENT", "Harrassment", offsel)
#offsel <- ifelse(off=="ASSAULT 3 & RELATED OFFENSES" |
#                   off=="FELONY ASSAULT", "Assault", offsel)
#offsel <- ifelse(off=="DANGEROUS DRUGS", "Drugs", offsel)
offsel <- ifelse(is.na(offsel), "Other Crime", offsel)
data_hate$offsel1 <- offsel
for (x in data_hate$County){
if(x == 'Bronx')
{}
}
data_hate <- Hate_Crimes
offsel <- NA
offsel <- ifelse(off=="Bronx", 40.844782, offsel)
data_hate <- Hate_Crimes
county <- data_hate$County
lat <- NA
lat <- ifelse(county=="Bronx", 40.844782, lat)
#offsel <- ifelse(off=="HARRASSMENT", "Harrassment", offsel)
#offsel <- ifelse(off=="ASSAULT 3 & RELATED OFFENSES" |
#                   off=="FELONY ASSAULT", "Assault", offsel)
#offsel <- ifelse(off=="DANGEROUS DRUGS", "Drugs", offsel)
lat <- ifelse(is.na(lat), "Other Crime", lat)
data_hate$lat <- lat
View(data_hate)
data_hate <- Hate_Crimes
county <- data_hate$County
lat <- NA
lat <- ifelse(county=="BRONX", 40.844782, lat)
#offsel <- ifelse(off=="HARRASSMENT", "Harrassment", offsel)
#offsel <- ifelse(off=="ASSAULT 3 & RELATED OFFENSES" |
#                   off=="FELONY ASSAULT", "Assault", offsel)
#offsel <- ifelse(off=="DANGEROUS DRUGS", "Drugs", offsel)
lat <- ifelse(is.na(lat), "Other Crime", lat)
data_hate$lat <- lat
View(data_hate)
View(data_hate)
data_hate <- Hate_Crimes
county <- data_hate$County
lat <- NA
lat <- ifelse(county=="BRONX", 40.844782, lat)
lat <- ifelse(county=="RICHMOND", 40.5834379, lat)
lat <- ifelse(county=="NEW YORK", 40.730610, lat)
lat <- ifelse(county=="QUEENS", 40.742054, lat)
lat <- ifelse(county=="KINGS", 40.819824, lat)
long <- NA
long <- ifelse(county=="BRONX", -73.864827, long)
long <- ifelse(county=="RICHMOND", -74.1495875, long)
long <- ifelse(county=="NEW YORK", -73.935242, long)
long <- ifelse(county=="QUEENS", -73.769417, long)
long <- ifelse(county=="KINGS", -73.735130, long)
#offsel <- ifelse(off=="HARRASSMENT", "Harrassment", offsel)
#offsel <- ifelse(off=="ASSAULT 3 & RELATED OFFENSES" |
#                   off=="FELONY ASSAULT", "Assault", offsel)
#offsel <- ifelse(off=="DANGEROUS DRUGS", "Drugs", offsel)
#lat <- ifelse(is.na(lat), "Other Crime", lat)
data_hate$lat <- lat
data_hate$long <- long
View(data_hate)
View(data_hate)
nypd <- data_hate %>% filter(
is.na(nypd$lat)==FALSE &
is.na(nypd$long)==FALSE)
data_hate$lat <- lat
data_hate$long <- long
nypd <- data_hate %>% filter(
is.na(nypd$lat)==FALSE &
is.na(nypd$long)==FALSE)
nypd <- data_hate %>% filter(
is.na(nypd$Latitude)==FALSE &
is.na(nypd$Longitude)==FALSE)
nypd <- data_hate %>% filter(
is.na(nypd$lat)==FALSE &
is.na(nypd$long)==FALSE)
# Plot
leaflet(nypd) %>%
addTiles() %>% # add the background map
addCircles(lng = ~Longitude, lat = ~Latitude)
leaflet(data_hate) %>%
addTiles() %>% # add the background map
addCircles(lng = ~long, lat = ~lat)
View(data1)
library(RColorBrewer)
pal = colorFactor("Set1", domain = data_hate$County) # Grab a palette
color_offsel1 = pal(data_hate$County)
mclust <- m %>% addCircleMarkers(color = color_offsel1,
popup = content,
clusterOptions = markerClusterOptions())
# Plot
m < - leaflet(data_hate) %>%
addTiles() %>% # add the background map
addCircles(lng = ~long, lat = ~lat)
# Plot
m <- leaflet(data_hate) %>%
addTiles() %>% # add the background map
addCircles(lng = ~long, lat = ~lat)
library(RColorBrewer)
pal = colorFactor("Set1", domain = data_hate$County) # Grab a palette
color_offsel1 = pal(data_hate$County)
mclust <- m %>% addCircleMarkers(color = color_offsel1,
popup = content,
clusterOptions = markerClusterOptions())
library(RColorBrewer)
pal = colorFactor("Set1", domain = data_hate$County) # Grab a palette
color_offsel1 = pal(data_hate$County)
mclust <- m %>% addCircleMarkers(color = color_offsel1,
popup = content,
clusterOptions = markerClusterOptions())
mclust
# Plot
m <- leaflet(data_hate) %>%
addTiles() %>% # add the background map
library(RColorBrewer)
# Plot
m <- leaflet(data_hate) %>%
addTiles() # add the background map
library(RColorBrewer)
pal = colorFactor("Set1", domain = data_hate$County) # Grab a palette
color_offsel1 = pal(data_hate$County)
mclust <- m %>% addCircleMarkers(color = color_offsel1,
popup = content,
clusterOptions = markerClusterOptions())
mclust
mclust <- m %>% addCircleMarkers(color = color_offsel1,
popup = content,
clusterOptions = markerClusterOptions()) %>%
addLegend(pal = pal, values = ~nypd$offsel1, title = "Counties")
mclust <- m %>% addCircleMarkers(color = color_offsel1,
popup = content,
clusterOptions = markerClusterOptions()) %>%
addLegend(pal = pal, values = ~data_hate$County, title = "Counties")
mclust
data_hate <- Hate_Crimes
county <- data_hate$County
lat <- NA
lat <- ifelse(county=="BRONX", 40.844782, lat)
lat <- ifelse(county=="RICHMOND", 40.5834379, lat)
lat <- ifelse(county=="NEW YORK", 40.730610, lat)
lat <- ifelse(county=="QUEENS", 40.742054, lat)
lat <- ifelse(county=="KINGS", 40.819824, lat)
long <- NA
long <- ifelse(county=="BRONX", -73.864827, long)
long <- ifelse(county=="RICHMOND", -74.1495875, long)
long <- ifelse(county=="NEW YORK", -73.935242, long)
long <- ifelse(county=="QUEENS", -73.769417, long)
long <- ifelse(county=="KINGS", -73.735130, long)
data_hate$lat <- lat
data_hate$long <- long
# Plot
m <- leaflet(data_hate) %>%
addTiles() # add the background map
library(RColorBrewer)
pal = colorFactor("Set1", domain = data_hate$County) # Grab a palette
color_offsel1 = pal(data_hate$County)
mclust <- m %>% addCircleMarkers(color = color_offsel1,
popup = content,
clusterOptions = markerClusterOptions()) %>%
addLegend(pal = pal, values = ~data_hate$County, title = "Counties")
mclust
shiny::runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
runApp('C:/Columbia MS CS/Spring 2022/Applied Data Science/Project2/spring-2022-project2-group-14-test/spring-2022-project2-group-14-test/app')
